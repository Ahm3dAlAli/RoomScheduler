package com.roomscheduler;

import java.sql.Date;
import java.sql.SQLException;
import java.util.ArrayList;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.sql.Timestamp;
import java.text.SimpleDateFormat;
import static java.util.Collections.sort;
import java.util.Iterator;
import javax.swing.Icon;
import javax.swing.JLabel;






/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author acv
 */
public class RoomSchedulerFrame extends javax.swing.JFrame
{

    

    
    /**
     * Creates new form RoomSchedulerFrame
     */
    public RoomSchedulerFrame()
    {
        initComponents();
        
        // Load the combo boxes with data.
        rebuildFacultyComboBoxes();
    }
    
    public void rebuildFacultyComboBoxes()
    {
        reserveFacultyComboBox.setModel(new javax.swing.DefaultComboBoxModel(Faculty.getFacultyList().toArray()));        
        statusFac.setModel(new javax.swing.DefaultComboBoxModel(Faculty.getFacultyList().toArray()));
    }   


    public void rebuildResListComboBoxes()
    {
        ReservSelectComboBox.setModel(new javax.swing.DefaultComboBoxModel(Dates.getAllDates().toArray()));
      
    }
    public void rebuildRoomListComboBox()
    {
        removeRooom.setModel(new javax.swing.DefaultComboBoxModel(RoomQueries.getRooms().toArray()));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane3 = new javax.swing.JTabbedPane();
        jLabel1 = new javax.swing.JLabel();
        addRoompanel = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        addFacultyTextField = new javax.swing.JTextField();
        addFacultyButton = new javax.swing.JButton();
        addFacultyStatusLabel = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        reserveFacultyComboBox = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        reserveSeatsTextField = new javax.swing.JTextField();
        reserveSubmitButton = new javax.swing.JButton();
        reserveStatusLabel = new javax.swing.JLabel();
        jSpinner1 = new javax.swing.JSpinner();
        cancelReserv = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        ReservSelectComboBox = new javax.swing.JComboBox<>();
        submitButton3 = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jPanel3 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        waitlistbut = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jLayeredPane1 = new javax.swing.JLayeredPane();
        addRoomSubm = new javax.swing.JButton();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        roomnumText = new javax.swing.JTextField();
        seatText = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        roomRem = new javax.swing.JButton();
        removeRooom = new javax.swing.JComboBox<>();
        jLabel21 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLayeredPane2 = new javax.swing.JLayeredPane();
        statusFac = new javax.swing.JComboBox<>();
        jLabel20 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTextArea3 = new javax.swing.JTextArea();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTextArea4 = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Comic Sans MS", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(204, 0, 0));
        jLabel1.setText("Room Scheduler");

        jLabel2.setText("Faculty Name: ");

        addFacultyTextField.setColumns(20);

        addFacultyButton.setText("Add");
        addFacultyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addFacultyButtonActionPerformed(evt);
            }
        });

        addFacultyStatusLabel.setText("    ");

        jLabel7.setText("   ");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(addFacultyStatusLabel))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(addFacultyTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel7)))
                .addContainerGap(137, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(204, 204, 204)
                .addComponent(addFacultyButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(addFacultyTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(75, 75, 75)
                .addComponent(addFacultyStatusLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addFacultyButton)
                .addContainerGap(326, Short.MAX_VALUE))
        );

        addRoompanel.addTab("Add Faculty ", jPanel1);

        jLabel4.setText("Faculty: ");

        jLabel5.setText("Date: ");

        jLabel6.setText("Seats Required: ");

        reserveSeatsTextField.setColumns(3);

        reserveSubmitButton.setText("Add");
        reserveSubmitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reserveSubmitButtonActionPerformed(evt);
            }
        });

        reserveStatusLabel.setText("   ");

        jSpinner1.setModel(new javax.swing.SpinnerDateModel());

        cancelReserv.setText("Cancel");
        cancelReserv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelReservActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(reserveStatusLabel)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(reserveSeatsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(reserveFacultyComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(reserveSubmitButton)
                        .addGap(79, 79, 79)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 114, Short.MAX_VALUE)
                .addComponent(cancelReserv, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(71, 71, 71))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(reserveFacultyComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(jSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(reserveSeatsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(75, 75, 75)
                        .addComponent(reserveStatusLabel))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(112, 112, 112)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(reserveSubmitButton)
                            .addComponent(cancelReserv))))
                .addContainerGap(253, Short.MAX_VALUE))
        );

        addRoompanel.addTab("Reserve Room", jPanel2);

        jLabel3.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        jLabel3.setText("Date:");

        submitButton3.setText("View");
        submitButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitButton3ActionPerformed(evt);
            }
        });

        jLabel9.setText("Room");

        jLabel10.setText("Faculty");

        jLabel11.setText("Seats");

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ReservSelectComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addGap(55, 55, 55)
                                .addComponent(jLabel9)
                                .addGap(61, 61, 61)
                                .addComponent(jLabel11)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 115, Short.MAX_VALUE)
                .addComponent(submitButton3)
                .addGap(46, 46, 46))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(ReservSelectComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel10)
                        .addComponent(jLabel9)))
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 364, Short.MAX_VALUE)
                        .addGap(63, 63, 63))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(91, 91, 91)
                        .addComponent(submitButton3)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        addRoompanel.addTab("Reservations", jPanel4);

        jLabel8.setText("Date:");

        waitlistbut.setText("View");
        waitlistbut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                waitlistbutActionPerformed(evt);
            }
        });

        jLabel12.setText("Faculty");

        jLabel13.setText("Seats");

        jTextArea2.setColumns(20);
        jTextArea2.setRows(5);
        jScrollPane2.setViewportView(jTextArea2);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addGap(59, 59, 59)
                        .addComponent(jLabel13)
                        .addGap(64, 64, 64)
                        .addComponent(jLabel8)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 78, Short.MAX_VALUE)
                        .addComponent(waitlistbut)
                        .addGap(64, 64, 64))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(jLabel13)
                    .addComponent(jLabel8))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 303, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(145, 145, 145)
                        .addComponent(waitlistbut)))
                .addContainerGap(156, Short.MAX_VALUE))
        );

        addRoompanel.addTab("Waiting List", jPanel3);

        addRoomSubm.setText("Add");
        addRoomSubm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addRoomSubmActionPerformed(evt);
            }
        });

        jLabel16.setText("Room Number:");

        jLabel17.setText("Seats:");

        roomRem.setText("Remove");
        roomRem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                roomRemActionPerformed(evt);
            }
        });

        removeRooom.setSelectedItem(new javax.swing.DefaultComboBoxModel(RoomQueries.getRooms().toArray()));

        jLabel21.setText("Room:");

        jLayeredPane1.setLayer(addRoomSubm, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jLabel16, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jLabel17, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(roomnumText, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(seatText, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jLabel14, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jLabel15, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jLabel18, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jLabel19, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(roomRem, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(removeRooom, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jLabel21, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jLabel24, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jLabel25, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jLayeredPane1Layout = new javax.swing.GroupLayout(jLayeredPane1);
        jLayeredPane1.setLayout(jLayeredPane1Layout);
        jLayeredPane1Layout.setHorizontalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel14)
                    .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jLayeredPane1Layout.createSequentialGroup()
                            .addComponent(jLabel17)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(seatText))
                        .addComponent(jLabel16))
                    .addGroup(jLayeredPane1Layout.createSequentialGroup()
                        .addComponent(jLabel15)
                        .addGap(100, 100, 100)
                        .addComponent(jLabel18))
                    .addComponent(addRoomSubm)
                    .addGroup(jLayeredPane1Layout.createSequentialGroup()
                        .addComponent(jLabel24)
                        .addGap(12, 12, 12)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(roomnumText, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 73, Short.MAX_VALUE)
                .addComponent(jLabel21)
                .addGap(18, 18, 18)
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(roomRem)
                    .addComponent(removeRooom, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50))
            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jLayeredPane1Layout.createSequentialGroup()
                        .addGap(155, 155, 155)
                        .addComponent(jLabel19))
                    .addGroup(jLayeredPane1Layout.createSequentialGroup()
                        .addGap(216, 216, 216)
                        .addComponent(jLabel25)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jLayeredPane1Layout.setVerticalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(roomnumText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(removeRooom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel21))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(seatText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(55, 55, 55)
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jLayeredPane1Layout.createSequentialGroup()
                        .addComponent(jLabel19)
                        .addGap(10, 10, 10)
                        .addComponent(jLabel14)
                        .addGap(21, 21, 21)
                        .addComponent(jLabel18)
                        .addGap(41, 41, 41)
                        .addComponent(jLabel15))
                    .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(addRoomSubm)
                        .addComponent(roomRem)))
                .addGap(18, 18, 18)
                .addComponent(jLabel25)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel24)
                .addContainerGap(273, Short.MAX_VALUE))
        );

        addRoompanel.addTab("Room", jLayeredPane1);

        statusFac.setSelectedItem(reserveFacultyComboBox);

        jLabel20.setText("Faculty:");

        jLabel22.setText("Reservation");

        jLabel23.setText("WaitList");

        jTextArea3.setColumns(20);
        jTextArea3.setRows(5);
        jScrollPane5.setViewportView(jTextArea3);

        jTextArea4.setColumns(20);
        jTextArea4.setRows(5);
        jScrollPane6.setViewportView(jTextArea4);

        jButton1.setText("View");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLayeredPane2.setLayer(statusFac, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane2.setLayer(jLabel20, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane2.setLayer(jLabel22, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane2.setLayer(jLabel23, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane2.setLayer(jScrollPane5, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane2.setLayer(jScrollPane6, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane2.setLayer(jButton1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jLayeredPane2Layout = new javax.swing.GroupLayout(jLayeredPane2);
        jLayeredPane2.setLayout(jLayeredPane2Layout);
        jLayeredPane2Layout.setHorizontalGroup(
            jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLayeredPane2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLayeredPane2Layout.createSequentialGroup()
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(105, 105, 105)
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLayeredPane2Layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addGap(216, 216, 216))))
            .addGroup(jLayeredPane2Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel20)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jLayeredPane2Layout.createSequentialGroup()
                        .addComponent(statusFac, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(329, Short.MAX_VALUE))
                    .addGroup(jLayeredPane2Layout.createSequentialGroup()
                        .addComponent(jLabel22)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel23)
                        .addGap(91, 91, 91))))
        );
        jLayeredPane2Layout.setVerticalGroup(
            jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane2Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(statusFac, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel20))
                .addGap(11, 11, 11)
                .addGroup(jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel22)
                    .addComponent(jLabel23))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 291, Short.MAX_VALUE)
                    .addComponent(jScrollPane5))
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addContainerGap(93, Short.MAX_VALUE))
        );

        addRoompanel.addTab("Status Faculty", jLayeredPane2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(147, 147, 147)
                .addComponent(jLabel1)
                .addGap(70, 70, 70)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(addRoompanel)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1)
                    .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addRoompanel, javax.swing.GroupLayout.DEFAULT_SIZE, 564, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    private void addFacultyButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_addFacultyButtonActionPerformed
    {//GEN-HEADEREND:event_addFacultyButtonActionPerformed
        // Add the faculty to the faculty table.
        String name = addFacultyTextField.getText();
        ArrayList<String> FacList = Faculty.getFacultyList();
        if(FacList.contains(name) )
            addFacultyStatusLabel.setText(name+" is already in Faculty.");   
        
        else if (!FacList.contains(name) )
        {    
            Faculty.addFaculty(name);
            addFacultyStatusLabel.setText(name+" has been added to the Faculty.");
        }
        
        addFacultyTextField.setText("");
        // rebuild the reservation faculty and date combo box.
        rebuildFacultyComboBoxes();
        
      

    }//GEN-LAST:event_addFacultyButtonActionPerformed

    private void reserveSubmitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reserveSubmitButtonActionPerformed
       
       String name  = reserveFacultyComboBox.getSelectedItem().toString();
       SimpleDateFormat formater = new SimpleDateFormat("yyyy-MM-dd");
       String SpinnerVal= formater.format(jSpinner1.getValue());
       Date date = Date.valueOf(SpinnerVal);
       //Date date = (Date) reserveDateComboBox.getSelectedItem();
       int seats = Integer.parseInt(reserveSeatsTextField.getText());
       ArrayList<String> room = RoomQueries.getAvilaRoomForSeats(date,seats);
       Timestamp timestamp = new Timestamp(System.currentTimeMillis());
       ArrayList<String> reserved=ReservationQueries.getRoomsReservedByDate(date);
       int NumReserv= reserved.size();
       ArrayList<String> facutyres=ReservationQueries.getFacultybyReservedDates(date);
       ArrayList<WaitlistEntry> facutywait=WaitlistQue.getWaitlistByFaculty(name);
       int NumRooms =  RoomQueries.getAllRooms().size();
       
      
       boolean Check = false;
       
       if (!room.isEmpty())
         Check= true;

      
       if (facutywait.contains(name))
       {
          reserveStatusLabel.setText(name + " already in waiting List on " + date);     
        }
       
       else if(facutyres.contains(name))
       {
           reserveStatusLabel.setText(name + " already reserved a room on " + date);
       }
       
       else if (!facutyres.contains(name) && NumReserv !=NumRooms && Check  )
       {    
          
           String TempRoom=room.get(0);
           ReservationQueries.addReservationEntry(name,TempRoom, date, seats, timestamp);

           reserveStatusLabel.setText("Room " + TempRoom + " has been scheduled for " + name + " on " + date);
       }
       else if ((NumReserv == NumRooms || NumReserv< NumRooms) && !facutywait.contains(name))
       {
         reserveStatusLabel.setText(name + " would be added to waitlist on "+ date);
         WaitlistQue.addWaitlistEntry(name,date,seats,timestamp);
         
       }
       
    
       ArrayList<Date> CollDat = Dates.getAllDates();
       if(!CollDat.contains(date))
       {   
           Dates.addDate(date);
       }
       
       
       rebuildResListComboBoxes();
       
       reserveSeatsTextField.setText("");
   
    }//GEN-LAST:event_reserveSubmitButtonActionPerformed

    @SuppressWarnings("empty-statement")
    private void submitButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitButton3ActionPerformed
       
       ArrayList <ReservationEntry> reserved =ReservationQueries.getReservationsByDate((Date) ReservSelectComboBox.getSelectedItem());
       System.out.println(ReservSelectComboBox.getSelectedItem());
       String Reslist = "";
       
       /*for (int i=0;i<reserved.size();i++)
       {   
           Reslist+= reserved.get(i).getFaculty()+ "\t" + reserved.get(i).getRoom() + "\t" + reserved.get(i).getSeats()+ "\n";
       }*/
       
       for(ReservationEntry entry : reserved)
       {   
           
           Reslist+= entry.getFaculty()+ "\t" + entry.getRoom() + "\t" + entry.getSeats()+ "\n";
          
       }
       
       jTextArea1.setText(Reslist);
    }//GEN-LAST:event_submitButton3ActionPerformed

    private void waitlistbutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_waitlistbutActionPerformed
        ArrayList <WaitlistEntry> wait = WaitlistQue.getWaitlist();
        String Reslist1 = "";
      
        
       for(WaitlistEntry entry : wait)
       {   
           Reslist1+= entry.getFaculty() + "\t" + entry.getSeats() +"\t" + entry.getDate() + "\n";
       }
       jTextArea2.setText(Reslist1);
       
    }//GEN-LAST:event_waitlistbutActionPerformed

    private void addRoomSubmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addRoomSubmActionPerformed
        // TODO add your handling code here:
        String roomnum=roomnumText.getText();
        int seatsnum=Integer.parseInt(seatText.getText());
        ArrayList<String> Rooms = RoomQueries.getAllRooms();
        
        if(Rooms.contains(roomnum))
            jLabel19.setText("Room "+roomnum + " is already been added choose new room ");
        else
        { 
            RoomQueries.addRoom(roomnum, seatsnum);
            jLabel19.setText("Room "+roomnum + " has been added to rooms");
        }
        
        ArrayList<WaitlistEntry> WaitList=WaitlistQue.getWaitlist();
        
        for(WaitlistEntry entry : WaitList)
       {   
           
           String TempName=entry.getFaculty(); 
           int TempSeats = entry.getSeats();
           Date Tempdate = entry.getDate();
           String Temproom="";
           Timestamp TempTime = new Timestamp(System.currentTimeMillis());
           ArrayList<String> Avil=RoomQueries.getAvilaRoomForSeats(Tempdate,TempSeats);
           if(Avil.isEmpty())
               continue;
           else
           {   Temproom=Avil.get(0);
               ReservationQueries.addReservationEntry(TempName,Temproom, Tempdate, TempSeats, TempTime);
               WaitlistQue.deleteWaitlistEntry(TempName);
           }
           
           
       }
        rebuildRoomListComboBox();
        
    }//GEN-LAST:event_addRoomSubmActionPerformed

    private void cancelReservActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelReservActionPerformed
        // TODO add your handling code here:
       String Fac  = reserveFacultyComboBox.getSelectedItem().toString();
       ArrayList<ReservationEntry> PrevRoom = ReservationQueries.getReservationsByFaculty(Fac);
       SimpleDateFormat formater = new SimpleDateFormat("yyyy-MM-dd");
       String SpinnerVal= formater.format(jSpinner1.getValue());
       Date date = Date.valueOf(SpinnerVal);
       Timestamp TempTime = new Timestamp(System.currentTimeMillis());
       ArrayList<WaitlistEntry>  WaitLis = WaitlistQue.getWaitlistByFaculty(Fac);
       ArrayList<String> FacResList = ReservationQueries.getFacultyOnReservationList();
       ArrayList<WaitlistEntry>  WaitLisDa = WaitlistQue.getWaitlistByDate(date);
       String TempRoomRes = "";
       String TempFacWait="";
       String TempFacWaitO = "";
       boolean Check1 = false;
      
       for(WaitlistEntry Ent : WaitLis)
       {
           if(Ent.getFaculty().equals(Fac))  
           {    
               Check1 = true;
               TempFacWaitO=Ent.getFaculty();
           }
           else
               continue;
       }
       for(ReservationEntry Ent : PrevRoom)
       {
           if(Ent.getDate().equals(date))  
              TempRoomRes = Ent.getRoom();
           else
               continue;
       }
       
       int CapTempRoom = RoomQueries.getCapacityForRooms(TempRoomRes);
       
       if (FacResList.contains(Fac)) //reservation cancelling adding from waitlist
       {
            ReservationQueries.cancelReservation(Fac, date);
            for(WaitlistEntry Ent : WaitLisDa)
            {
                int TempSea = Ent.getSeats();
                
                if(TempSea <= CapTempRoom )
                {
                    ReservationQueries.addReservationEntry(Ent.getFaculty(),TempRoomRes , date, TempSea, TempTime);
                    TempFacWait=Ent.getFaculty();
                }
                else
                    continue;
                
                
            
            }
        reserveStatusLabel.setText(Fac+ " Reservation Cancelled " + TempFacWait+ " Placed in room " + TempRoomRes );
       }
       
       else if (Check1) // waitlist cancelling 
       {    
          WaitlistQue.deleteWaitlistEntry(Fac);
          reserveStatusLabel.setText("Waiting Position Of " + TempFacWaitO +" is removed");
        }
             
            
       
       
       
    }//GEN-LAST:event_cancelReservActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
       String Fac = statusFac.getSelectedItem().toString();
       //Reservation List by faculty
       ArrayList <ReservationEntry> reservedLi =ReservationQueries.getReservationsByFaculty(Fac);
       String Reslist1 = " ";
    
       
       for(ReservationEntry entry1 : reservedLi) 
           Reslist1+= "Room: "+ entry1.getRoom() +"\t "+ "Date: "+ entry1.getDate()+ "\n";
       
      jTextArea3.setText(Reslist1);           
      
       //Wait List By Faculty
        ArrayList <WaitlistEntry> waitLis = WaitlistQue.getWaitlistByFaculty(Fac);
        String Reslist2 = "";
      
        
       for(WaitlistEntry entry2 : waitLis)
           Reslist2+=  "Date: " + entry2.getDate() + "\n";
       
 
       jTextArea4.setText(Reslist2);
       
    }//GEN-LAST:event_jButton1ActionPerformed

    private void roomRemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_roomRemActionPerformed
        // TODO add your handling code here:
        String TemRoom = removeRooom.getSelectedItem().toString();
        ArrayList<ReservationEntry> RemRoom = ReservationQueries.getReservationsByRoom(TemRoom);
        
        for (ReservationEntry  E : RemRoom )
        {
            String TempNam=E.getFaculty();
            String TempRoom =E.getRoom();
            int TempSea=E.getSeats();
            Date Tempdate=E.getDate();
            ReservationQueries.deleteReservation(TempRoom);
            RoomQueries.dropRoom(TemRoom);
            
            ArrayList<String> room = RoomQueries.getAvilaRoomForSeats(Tempdate,TempSea);
            ArrayList<String> reserved=ReservationQueries.getRoomsReservedByDate(Tempdate);
            int NumReserv= reserved.size();
            Timestamp TempTime = new Timestamp(System.currentTimeMillis());
            
            int NumRooms =  RoomQueries.getAllRooms().size();
            
            
            ReservationQueries.deleteReservation(TempRoom);
            ArrayList<String> facutyres=ReservationQueries.getFacultybyReservedDates(Tempdate);
            ArrayList<WaitlistEntry> facutywait=WaitlistQue.getWaitlistByFaculty(TempNam);
            boolean Check = false;
            if (!room.isEmpty())
                   Check= true;
              
            
       
            if (facutywait.contains(TempNam))
            {
                jLabel25.setText(TempNam + " already in waiting List on " + Tempdate);     
             }
       
            else if(facutyres.contains(TempNam))
            {
                jLabel25.setText(TempNam + " already reserved a room on " + Tempdate);
            }
       
            else if (!facutyres.contains(TempNam) && NumReserv !=NumRooms && Check  )
            {   
                ArrayList<Integer> SeatsAv=RoomQueries.getSeatsForUn(RoomQueries.getAvilaRoomForSeats(Tempdate,TempSea));
                sort(SeatsAv);
                TempRoom=RoomQueries.getRoomForSeats(SeatsAv.get(0));
            
                ReservationQueries.addReservationEntry(TempNam,TempRoom,Tempdate,TempSea,TempTime);
                jLabel25.setText("Room " + TempRoom + " has been scheduled for " + TempNam + " on " + Tempdate);
            }
            else if ((NumReserv == NumRooms || NumReserv<NumRooms) && !facutywait.contains(TempNam))
            {
                jLabel25.setText(TempNam + " would be added to waitlist on "+ Tempdate);
                WaitlistQue.addWaitlistEntry(TempNam,Tempdate,TempSea,TempTime);
         
            }
            
           
    
             
        }   
            jLabel19.setText("Room"+ TemRoom + " Has been removed ");
            //ReservationQueries.deleteReservation(TemRoom);
            
            rebuildRoomListComboBox();
    }//GEN-LAST:event_roomRemActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[])
    {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try
        {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels())
            {
                if ("Nimbus".equals(info.getName()))
                {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex)
        {
            java.util.logging.Logger.getLogger(RoomSchedulerFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex)
        {
            java.util.logging.Logger.getLogger(RoomSchedulerFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex)
        {
            java.util.logging.Logger.getLogger(RoomSchedulerFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex)
        {
            java.util.logging.Logger.getLogger(RoomSchedulerFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new RoomSchedulerFrame().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> ReservSelectComboBox;
    private javax.swing.JButton addFacultyButton;
    private javax.swing.JLabel addFacultyStatusLabel;
    private javax.swing.JTextField addFacultyTextField;
    private javax.swing.JButton addRoomSubm;
    private javax.swing.JTabbedPane addRoompanel;
    private javax.swing.JButton cancelReserv;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JLayeredPane jLayeredPane2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JSpinner jSpinner1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane3;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JTextArea jTextArea3;
    private javax.swing.JTextArea jTextArea4;
    private javax.swing.JComboBox<String> removeRooom;
    private javax.swing.JComboBox<String> reserveFacultyComboBox;
    private javax.swing.JTextField reserveSeatsTextField;
    private javax.swing.JLabel reserveStatusLabel;
    private javax.swing.JButton reserveSubmitButton;
    private javax.swing.JButton roomRem;
    private javax.swing.JTextField roomnumText;
    private javax.swing.JTextField seatText;
    private javax.swing.JComboBox<String> statusFac;
    private javax.swing.JButton submitButton3;
    private javax.swing.JButton waitlistbut;
    // End of variables declaration//GEN-END:variables
}
/*       
       String name  = reserveFacultyComboBox.getSelectedItem().toString();
       SimpleDateFormat formater = new SimpleDateFormat("yyyy-MM-dd");
       String SpinnerVal= formater.format(jSpinner1.getValue());
       Date date = Date.valueOf(SpinnerVal);
       //Date date = (Date) reserveDateComboBox.getSelectedItem();
       int seats = Integer.parseInt(reserveSeatsTextField.getText());
       String room = RoomQueries.getRoomForSeats(seats);
       Timestamp timestamp = new Timestamp(System.currentTimeMillis());
       ArrayList<String> reserved=ReservationQueries.getRoomsReservedByDate(date);
       int NumReserv= reserved.size();
       ArrayList<String> facutyres=ReservationQueries.getFacultybyReservedDates(date);
       ArrayList<WaitlistEntry> facutywait=WaitlistQue.getWaitlistByFaculty(name);
       int NumRooms =  RoomQueries.getAllRooms().size();
       ArrayList<Integer> SeatsAvil=RoomQueries.getSeatsForUn(RoomQueries.getAllPossibleRooms(seats));
      
       boolean Check = false;
       
       for(int Li : SeatsAvil)
       {
         if (Li>=seats)
             Check= true;
         else
             continue;
       }
       
       
       if (facutywait.contains(name))
       {
          reserveStatusLabel.setText(name + " already in waiting List on " + date);     
        }
       
       else if(facutyres.contains(name))
       {
           reserveStatusLabel.setText(name + " already reserved a room on " + date);
       }
       
       else if (!facutyres.contains(name) && NumReserv !=NumRooms && Check  )
       {    while(reserved.contains(room))
            {   
                ArrayList<String> Poss = new ArrayList<String>();
                Poss =  RoomQueries.getAllPossibleRooms(seats);
                Poss.remove(room);
                if(Poss.isEmpty())
                {
                    continue;
                }
                else 
                    room=RoomQueries.getRoomForSeats(RoomQueries.getCapacityForRooms(Poss.get(0)));
            } 
            
            ReservationQueries.addReservationEntry(name,room,date,seats,timestamp);
            reserveStatusLabel.setText("Room " + room + " has been scheduled for " + name + " on " + date);
       }
       else if ((NumReserv == NumRooms) && !facutywait.contains(name))
       {
         reserveStatusLabel.setText(name + " would be added to waitlist on "+ date);
         WaitlistQue.addWaitlistEntry(name,date,seats,timestamp);
         
       }
       
    
       ArrayList<Date> CollDat = Dates.getAllDates();
       if(!CollDat.contains(date))
       {   
           Dates.addDate(date);
       }
       
       
       rebuildResListComboBoxes();
       
       reserveSeatsTextField.setText("");*/